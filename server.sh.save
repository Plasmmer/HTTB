#!/usr/bin/bash
declare -r CR=$'\r'
declare -r LF=$'\n'
declare -r CR_LF="${CR}${LF}"

declare -r DEBUG=1

log() {
    if [ $DEBUG = 1 ]
    then
        echo "$1" >&2;
    fi
}

serve() {
    ncat --listen --keep-open 0.0.0.0 8080 --sh-exec "bash server.sh process"
}

process() {
#    IFS=$'\n'
    IFS=$LF

    get_request_headers

    handle_requested_resource

    echo -e "<html><head></head><body><h1>Hello, World!</h1><p>It's like the early times of the Internet... ...but we are building the Web 3.0, actually.</p></body></html>"
    log "Hello, Error"
}

get_request_headers() {
#    jsonrequest="$(cat - | grep -o '{...\+}')"
#    log "$jsonrequest"
    request_headers=()

    while true
    do
        read header
        log "$header"
#        jsonrequest="$(cat - | grep -o '{...\+}')"
#        log "$jsonrequest"
        if [ "$header" = $CR_LF ]
        then
            break
        fi
        request_headers=("${request_headers[@]}" "$header")
    done
}

handle_requested_resource() {
    regexp=".* (.*) HTTP"
    [[ "${request_headers[0]}" =~ $regexp ]]

    resource="${BASH_REMATCH[1]}"

    requested_resource="./app$resource"
    if [ -f "$requested_resource" ]
    then
        cat "$requested_resource"
    fi
}

"$1"
